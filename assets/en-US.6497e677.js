import{B as r,S as p,a as i,D as h}from"./Disabled.5d3123a0.js";import{_ as u}from"./IconSfc.394079fb.js";import{d as e,o as g,c as j,a as s,h as o,a6 as t,l as a}from"./vendor.cfbfc887.js";import"./index.71eb76a9.js";import"./index.77e53e3e.js";import"./elements.0f1b5e0a.js";import"./shared.5973ad73.js";import"./zIndex.a6f89f9c.js";import"./index.20a388b7.js";import"./index.8c54a66a.js";import"./index.256b1d16.js";import"./index.1e7a5b5d.js";import"./provide.ba79f650.js";import"./components.092cc01a.js";import"./en-US.0c801490.js";const m={components:{Basic:r,SizeOption:p,ShowTotal:i,Disabled:h}},b={class:"varlet-site-doc"},q=t(`<h1>Pagination</h1><div class="card"><h3>Intro</h3><p>Used to decompose large amounts of data.</p></div><div class="card"><h3>Install</h3><pre class="hljs"><code><link rel="stylesheet" href="./highlight.css"><span class="hljs-keyword">import</span> { createApp } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>
<span class="hljs-keyword">import</span> { Pagination } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;@varlet/ui&#39;</span>

createApp().use(Pagination)
</code></pre></div><div class="card"><h3>Simple Mode</h3><p>Set <code>simple</code> to <code>true</code> when you use small screen devices.</p><h4>Basic Usage</h4><pre class="hljs"><code><link rel="stylesheet" href="./highlight.css"><span class="hljs-tag">&lt;<span class="hljs-name">var-pagination</span> <span class="hljs-attr">current</span>=<span class="hljs-string">&quot;6&quot;</span> <span class="hljs-attr">total</span>=<span class="hljs-string">&quot;115&quot;</span> /&gt;</span>
</code></pre><h4>Hide Size Changer</h4><p>Use <code>showSizeChanger</code> prop to hide size changer.</p><pre class="hljs"><code><link rel="stylesheet" href="./highlight.css"><span class="hljs-tag">&lt;<span class="hljs-name">var-pagination</span> <span class="hljs-attr">current</span>=<span class="hljs-string">&quot;3&quot;</span> <span class="hljs-attr">total</span>=<span class="hljs-string">&quot;115&quot;</span> <span class="hljs-attr">:show-size-changer</span>=<span class="hljs-string">&quot;false&quot;</span> /&gt;</span>
</code></pre><h4>Show Total</h4><p>Use <code>showTatol</code> prop to show custom total text.</p><pre class="hljs"><code><link rel="stylesheet" href="./highlight.css"><span class="hljs-tag">&lt;<span class="hljs-name">var-pagination</span> 
  <span class="hljs-attr">current</span>=<span class="hljs-string">&quot;3&quot;</span> 
  <span class="hljs-attr">size</span>=<span class="hljs-string">&quot;20&quot;</span> 
  <span class="hljs-attr">total</span>=<span class="hljs-string">&quot;66&quot;</span> 
  <span class="hljs-attr">:show-total</span>=<span class="hljs-string">&quot;total =&gt; \`Total \${total} items\`&quot;</span> 
/&gt;</span>
</code></pre><h4>Disabled</h4><pre class="hljs"><code><link rel="stylesheet" href="./highlight.css"><span class="hljs-tag">&lt;<span class="hljs-name">var-pagination</span> <span class="hljs-attr">total</span>=<span class="hljs-string">&quot;66&quot;</span> <span class="hljs-attr">disabled</span> /&gt;</span>
</code></pre></div>`,4),v={class:"card"},f=s("h3",null,"Basic Mode",-1),_=s("p",null,[a("Set "),s("code",null,"simple"),a(" to "),s("code",null,"false"),a(" when you use medium and large screen devices.")],-1),w=s("h4",null,"Basic Usage",-1),y=s("p",null,[a("Use "),s("code",null,"showQuickJumper"),a(" prop to enable quick jumper.")],-1),z={class:"varlet-component-preview"},S=t(`<pre class="hljs"><code><link rel="stylesheet" href="./highlight.css"><span class="hljs-tag">&lt;<span class="hljs-name">var-pagination</span> <span class="hljs-attr">current</span>=<span class="hljs-string">&quot;6&quot;</span> <span class="hljs-attr">total</span>=<span class="hljs-string">&quot;115&quot;</span> <span class="hljs-attr">:simple</span>=<span class="hljs-string">&quot;false&quot;</span> <span class="hljs-attr">show-quick-jumper</span> /&gt;</span>
</code></pre><h4>Size Option</h4><p>Use <code>showSizeChanger</code> hide size changer and use <code>sizeOption</code> prop set the number of <code>size</code> that can be chosen.</p>`,3),x={class:"varlet-component-preview"},k=t(`<pre class="hljs"><code><link rel="stylesheet" href="./highlight.css"><span class="hljs-tag">&lt;<span class="hljs-name">var-pagination</span> <span class="hljs-attr">current</span>=<span class="hljs-string">&quot;6&quot;</span> <span class="hljs-attr">total</span>=<span class="hljs-string">&quot;115&quot;</span> <span class="hljs-attr">:simple</span>=<span class="hljs-string">&quot;false&quot;</span> <span class="hljs-attr">:show-size-changer</span>=<span class="hljs-string">&quot;false&quot;</span> /&gt;</span>
<span class="hljs-tag">&lt;<span class="hljs-name">var-pagination</span> <span class="hljs-attr">current</span>=<span class="hljs-string">&quot;3&quot;</span> <span class="hljs-attr">total</span>=<span class="hljs-string">&quot;115&quot;</span> <span class="hljs-attr">:simple</span>=<span class="hljs-string">&quot;false&quot;</span> <span class="hljs-attr">:size-option</span>=<span class="hljs-string">&quot;[10, 20, 30, 40]&quot;</span> /&gt;</span>
</code></pre><h4>Show Total</h4>`,2),C={class:"varlet-component-preview"},D=t(`<pre class="hljs"><code><link rel="stylesheet" href="./highlight.css"><span class="hljs-tag">&lt;<span class="hljs-name">var-pagination</span>
  <span class="hljs-attr">current</span>=<span class="hljs-string">&quot;3&quot;</span>
  <span class="hljs-attr">size</span>=<span class="hljs-string">&quot;10&quot;</span>
  <span class="hljs-attr">total</span>=<span class="hljs-string">&quot;66&quot;</span>
  <span class="hljs-attr">:simple</span>=<span class="hljs-string">&quot;false&quot;</span>
  <span class="hljs-attr">:show-total</span>=<span class="hljs-string">&quot;total =&gt; \`Total \${total} items\`&quot;</span>
/&gt;</span>
<span class="hljs-tag">&lt;<span class="hljs-name">var-pagination</span>
  <span class="hljs-attr">current</span>=<span class="hljs-string">&quot;3&quot;</span>
  <span class="hljs-attr">size</span>=<span class="hljs-string">&quot;10&quot;</span>
  <span class="hljs-attr">total</span>=<span class="hljs-string">&quot;66&quot;</span>
  <span class="hljs-attr">:simple</span>=<span class="hljs-string">&quot;false&quot;</span>
  <span class="hljs-attr">:show-total</span>=<span class="hljs-string">&quot;(total, range) =&gt; \`Total \${total}, current \${range[0]}-\${range[1]}\`&quot;</span>
/&gt;</span>
</code></pre><h4>Disabled</h4>`,2),T={class:"varlet-component-preview"},U=t(`<pre class="hljs"><code><link rel="stylesheet" href="./highlight.css"><span class="hljs-tag">&lt;<span class="hljs-name">var-pagination</span> <span class="hljs-attr">current</span>=<span class="hljs-string">&quot;6&quot;</span> <span class="hljs-attr">total</span>=<span class="hljs-string">&quot;115&quot;</span> <span class="hljs-attr">:simple</span>=<span class="hljs-string">&quot;false&quot;</span> <span class="hljs-attr">show-quick-jumper</span> <span class="hljs-attr">disabled</span> /&gt;</span>
</code></pre>`,1),B=t('<h2>API</h2><div class="card"><h3>Props</h3><table><thead><tr><th>prop</th><th>Description</th><th>Type</th><th>Default</th></tr></thead><tbody><tr><td><code>current</code></td><td>Current page number</td><td><em>string | number</em></td><td><code>1</code></td></tr><tr><td><code>size</code></td><td>Number of data items per page</td><td><em>string | number</em></td><td><code>10</code></td></tr><tr><td><code>total</code></td><td>Total number of data items</td><td><em>string | number</em></td><td><code>0</code></td></tr><tr><td><code>simple</code></td><td>Whether to use simple mode</td><td><em>boolean</em></td><td><code>true</code></td></tr><tr><td><code>disabled</code></td><td>Disable pagination</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td><code>showSizeChanger</code></td><td>Whether to show <code>size</code> select</td><td><em>boolean</em></td><td><code>true</code></td></tr><tr><td><code>showQuickJumper</code></td><td>Whether you can jump to pages directly</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td><code>maxShowBtnCount</code></td><td>Number of buttons displayed between ellipses</td><td><em>number</em></td><td><code>3</code></td></tr><tr><td><code>sizeOption</code></td><td>Specify the sizeChanger options</td><td><em>number[]</em></td><td><code>[10, 20, 50, 100]</code></td></tr><tr><td><code>showTotal</code></td><td>Show page item\u2019s title</td><td><em>function(total, range)</em></td><td><code>-</code></td></tr></tbody></table></div><div class="card"><h3>Events</h3><table><thead><tr><th>Event</th><th>Description</th><th>arguments</th></tr></thead><tbody><tr><td><code>change</code></td><td>Callback after <code>current</code> or <code>size</code> changes</td><td><code>current: number</code> <br><code>size: number</code></td></tr></tbody></table></div><div class="card"><h3>Slots</h3><table><thead><tr><th>Name</th><th>Description</th><th>SlotProps</th></tr></thead><tbody><tr><td><code>prev</code></td><td>Content of previous button</td><td><code>-</code></td></tr><tr><td><code>next</code></td><td>Content of next button</td><td><code>-</code></td></tr></tbody></table></div><div class="card"><h3>Style Variables</h3><p>Here are the CSS variables used by the component, Styles can be customized using <a href="#/en-US/style-provider">StyleProvider</a></p><table><thead><tr><th>Variable</th><th>Default</th></tr></thead><tbody><tr><td><code>--pagination-font-size</code></td><td><code>var(--font-size-md)</code></td></tr><tr><td><code>--pagination-active-color</code></td><td><code>#fff</code></td></tr><tr><td><code>--pagination-active-bg-color</code></td><td><code>var(--color-primary)</code></td></tr><tr><td><code>--pagination-hover-bg-color</code></td><td><code>rgb(245, 245, 245)</code></td></tr><tr><td><code>--pagination-total-margin</code></td><td><code>0 6px 0 0</code></td></tr><tr><td><code>--pagination-item-width</code></td><td><code>32px</code></td></tr><tr><td><code>--pagination-item-height</code></td><td><code>32px</code></td></tr><tr><td><code>--pagination-item-margin</code></td><td><code>0 4px</code></td></tr><tr><td><code>--pagination-item-border-radius</code></td><td><code>4px</code></td></tr><tr><td><code>--pagination-size-padding</code></td><td><code>0 6px</code></td></tr><tr><td><code>--pagination-list-bg-color</code></td><td><code>#fff</code></td></tr><tr><td><code>--pagination-list-active-bg-color</code></td><td><code>#dbe4fd</code></td></tr><tr><td><code>--pagination-list-active-color</code></td><td><code>var(--color-primary)</code></td></tr><tr><td><code>--pagination-input-width</code></td><td><code>36px</code></td></tr><tr><td><code>--pagination-input-margin</code></td><td><code>0 6px</code></td></tr></tbody></table></div>',5);function $(N,P,V,I,O,A){const n=e("basic"),d=e("size-option"),l=e("show-total"),c=e("disabled");return g(),j("div",b,[q,s("div",v,[f,_,w,y,s("div",z,[o(n)]),S,s("div",x,[o(d)]),k,s("div",C,[o(l)]),D,s("div",T,[o(c)]),U]),B])}var ts=u(m,[["render",$]]);export{ts as default};
