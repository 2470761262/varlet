import{_ as s}from"./IconSfc.fde87e76.js";import{o as t,c as a,a5 as n}from"./vendor.85536c59.js";const l={components:{}},e={class:"varlet-site-doc"},o=[n('<h1>@varlet/cli</h1><p>开箱即用的<code>Vue3组件库</code>快速成型工具，提供了一系列命令和工具去解决组件库开发上的问题</p><div class="card"><h3>特性</h3><ul><li>1.开箱即用的组件库开发环境</li><li>2.开箱即用的组件库编译工具，支持导出<code>esm</code>和<code>umd</code>两种模块代码</li><li>3.基于配置文件的组件库文档站点,支持百度统计和主题定制</li><li>4.支持<code>单文件组件(sfc)</code>和<code>tsx,jsx</code>两种风格的组件库编写风格</li><li>5.开箱即用的代码检查工具</li><li>6.开箱即用的单元测试工具</li><li>7.开箱即用的代码发布工具,发布到npm和github,并自动生成更新日志</li><li>8.支持<code>Typescript</code></li></ul></div><div class="card"><h3>快速开始</h3><p><code>@varlet/cli</code>内置了<code>单文件组件(sfc)</code>和<code>tsx, jsx</code>两种风格的组件库项目模板，可以通过<code>gen</code>命令直接生成。 帮助用户直接进入组件本身的开发，这里推荐使用<code>yarn</code>作为包管理工具，首先确保安装了<code>yarn</code>并且添加到系统环境变量中去，这里不展开介绍<code>yarn</code>的安装和配置方法。</p><pre class="hljs"><code><link rel="stylesheet" href="./highlight.css"><span class="hljs-meta">#</span><span class="bash"> 安装命令行工具</span>\nyarn global add @varlet/cli\n<span class="hljs-meta">#</span><span class="bash"> 使用gen命令生成项目</span>\nvarlet-cli gen 项目名\ncd 项目名\nyarn\nyarn dev\n</code></pre><p>然后通过简单修改一些组件库模板的基础信息，就可以开始组件库的开发了</p></div><h2>高级定制</h2><div class="card"><h3>配置文件</h3><p>项目根目录下的<code>varlet.config.js</code>用来管理整个组件库项目的具体细节</p><table><thead><tr><th>参数</th><th>说明</th><th>类型</th><th>默认值</th></tr></thead><tbody><tr><td><code>host</code></td><td>开发服务器主机</td><td><em>number</em></td><td><code>localhost</code></td></tr><tr><td><code>port</code></td><td>开发服务器端口</td><td><em>number</em></td><td><code>8080</code></td></tr><tr><td><code>name</code></td><td>组件库全名</td><td><em>string</em></td><td><code>Varlet</code></td></tr><tr><td><code>namespace</code></td><td>组件库命名空间, 会作为组件前缀</td><td><em>string</em></td><td><code>var</code></td></tr><tr><td><code>title</code></td><td>文档中组件库的标题</td><td><em>string</em></td><td><code>VARLET</code></td></tr><tr><td><code>logo</code></td><td>文档中组件库的logo</td><td><em>string</em></td><td><code>-</code></td></tr><tr><td><code>defaultLanguage</code></td><td>文档默认语言</td><td><em>string</em></td><td><code>zh-CN</code></td></tr><tr><td><code>useMobile</code></td><td>是否显示右侧手机预览</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td><code>themes</code></td><td>文档主题</td><td><em>SiteThemes</em></td><td><code>-</code></td></tr><tr><td><code>highlight</code></td><td>文档代码片段样式相关</td><td><em>SiteHighlight</em></td><td><code>-</code></td></tr><tr><td><code>analysis</code></td><td>文档统计相关</td><td><em>SiteAnalysis</em></td><td><code>-</code></td></tr><tr><td><code>pc</code></td><td>pc端文档结构配置</td><td><em>SitePC</em></td><td><code>-</code></td></tr><tr><td><code>mobile</code></td><td>mobile端文档结构配置</td><td><em>SiteMobile</em></td><td><code>-</code></td></tr></tbody></table><h4>SiteThemes</h4><p>主题变量相关，由于默认的主题变量可能时常修改，以<code>varlet</code>官方文档的主题为准</p><table><thead><tr><th>参数</th></tr></thead><tbody><tr><td><code>color-primary</code></td></tr><tr><td><code>color-link</code></td></tr><tr><td><code>color-type</code></td></tr><tr><td><code>color-progress</code></td></tr><tr><td><code>color-side-bar</code></td></tr><tr><td><code>color-side-bar-active-background</code></td></tr><tr><td><code>color-app-bar</code></td></tr><tr><td><code>color-mobile-cell-hover</code></td></tr><tr><td><code>color-mobile-cell-hover-background</code></td></tr></tbody></table><h4>SiteHighlight</h4><p>代码片段高亮，基于<a href="https://highlightjs.org/">highlight.js</a></p><table><thead><tr><th>参数</th><th>说明</th><th>类型</th><th>默认值</th></tr></thead><tbody><tr><td><code>style</code></td><td>highlight的css地址</td><td><em>string</em></td><td><code>-</code></td></tr></tbody></table><h4>SiteAnalysis</h4><p>统计埋点相关</p><table><thead><tr><th>参数</th><th>说明</th><th>类型</th><th>默认值</th></tr></thead><tbody><tr><td><code>baidu</code></td><td>百度统计脚本地址</td><td><em>string</em></td><td><code>-</code></td></tr></tbody></table><h4>SitePC, SiteMobile</h4><p>文档结构部分相关，示例配置如下</p><pre class="hljs"><code><link rel="stylesheet" href="./highlight.css"><span class="hljs-built_in">module</span>.exports = {\n  <span class="hljs-attr">pc</span>: {\n    <span class="hljs-attr">redirect</span>: <span class="hljs-string">&#39;/home&#39;</span>,\n    <span class="hljs-attr">title</span>: {\n      <span class="hljs-string">&#39;zh-CN&#39;</span>: <span class="hljs-string">&#39;一个组件库&#39;</span>,\n    },\n    <span class="hljs-attr">header</span>: {\n      <span class="hljs-attr">i18n</span>: <span class="hljs-literal">null</span>,\n      <span class="hljs-attr">github</span>: <span class="hljs-string">&#39;https://github.com/haoziqaq/varlet&#39;</span>,\n    },\n    <span class="hljs-attr">menu</span>: [\n      {\n        <span class="hljs-attr">text</span>: {\n          <span class="hljs-string">&#39;zh-CN&#39;</span>: <span class="hljs-string">&#39;开发指南&#39;</span>,\n        },\n        <span class="hljs-comment">// 侧边栏菜单目录</span>\n        <span class="hljs-attr">type</span>: <span class="hljs-number">1</span>,\n      },\n      {\n        <span class="hljs-attr">text</span>: {\n          <span class="hljs-string">&#39;zh-CN&#39;</span>: <span class="hljs-string">&#39;基本介绍&#39;</span>,\n        },\n        <span class="hljs-attr">doc</span>: <span class="hljs-string">&#39;home&#39;</span>,\n        <span class="hljs-comment">// 索引项目根目录下的md文档</span>\n        <span class="hljs-attr">type</span>: <span class="hljs-number">3</span>,\n      },\n      {\n        <span class="hljs-attr">text</span>: {\n          <span class="hljs-string">&#39;zh-CN&#39;</span>: <span class="hljs-string">&#39;基础组件&#39;</span>,\n        },\n        <span class="hljs-attr">type</span>: <span class="hljs-number">1</span>,\n      },\n      {\n        <span class="hljs-attr">text</span>: {\n          <span class="hljs-string">&#39;zh-CN&#39;</span>: <span class="hljs-string">&#39;Button 按钮&#39;</span>,\n        },\n        <span class="hljs-attr">doc</span>: <span class="hljs-string">&#39;button&#39;</span>,\n        <span class="hljs-comment">// 索引组件根目录下的md文档</span>\n        <span class="hljs-attr">type</span>: <span class="hljs-number">2</span>,\n      },\n    ],\n  },\n  <span class="hljs-attr">mobile</span>: {\n    <span class="hljs-attr">redirect</span>: <span class="hljs-string">&#39;/home&#39;</span>,\n    <span class="hljs-attr">title</span>: {\n      <span class="hljs-string">&#39;zh-CN&#39;</span>: <span class="hljs-string">&#39;一个组件库&#39;</span>,\n    },\n    <span class="hljs-attr">header</span>: {\n      <span class="hljs-attr">i18n</span>: <span class="hljs-literal">null</span>,\n    },\n  },\n}\n</code></pre></div><div class="card"><h3>命令相关</h3><h4>启动开发服务器</h4><pre class="hljs"><code><link rel="stylesheet" href="./highlight.css">varlet-cli dev\n</code></pre><h4>构建文档站点</h4><pre class="hljs"><code><link rel="stylesheet" href="./highlight.css">varlet-cli build\n</code></pre><h4>构建组件库代码</h4><pre class="hljs"><code><link rel="stylesheet" href="./highlight.css">varlet-cli compile\n</code></pre><h4>执行所有的单元测试</h4><pre class="hljs"><code><link rel="stylesheet" href="./highlight.css">varlet-cli test\n</code></pre><h4>以watch模式执行单元测试</h4><pre class="hljs"><code><link rel="stylesheet" href="./highlight.css">varlet-cli test -w\n</code></pre><h4>检查代码</h4><pre class="hljs"><code><link rel="stylesheet" href="./highlight.css">varlet-cli lint\n</code></pre><h4>快速创建一个组件文件夹</h4><pre class="hljs"><code><link rel="stylesheet" href="./highlight.css">varlet-cli create &lt;componentName&gt;\n</code></pre><h4>生成一个项目模板</h4><pre class="hljs"><code><link rel="stylesheet" href="./highlight.css">varlet-cli gen &lt;projectName&gt;\n</code></pre></div><div class="card"><h3>babel</h3><p>对<code>babel</code>进行配置，首先在<code>package.json</code>中指定目标浏览器</p><pre class="hljs"><code><link rel="stylesheet" href="./highlight.css">{\n  <span class="hljs-attr">&quot;browserslist&quot;</span>: [\n    <span class="hljs-string">&quot;Chrome &gt;= 51&quot;</span>,\n    <span class="hljs-string">&quot;iOS &gt;= 10&quot;</span>\n  ]\n}\n</code></pre><p>创建<code>babel.config,js</code></p><pre class="hljs"><code><link rel="stylesheet" href="./highlight.css"><span class="hljs-comment">// babel.config.js</span>\n<span class="hljs-built_in">module</span>.exports = {\n  <span class="hljs-attr">presets</span>: [\n    [\n      <span class="hljs-string">&#39;@varlet/cli/preset&#39;</span>,\n      {\n        <span class="hljs-attr">loose</span>: <span>process.env</span>.NODE_ENV === <span class="hljs-string">&#39;compile&#39;</span>,\n      },\n    ],\n  ],\n}\n</code></pre></div><div class="card"><h3>git和npm</h3><h4>git-hook</h4><p><code>husky</code>，<code>lint-staged</code>配合<code>eslint</code>，<code>stylelint</code>，<code>commitlint</code>做commit前的检查，<code>package.json</code>配置如下</p><pre class="hljs"><code><link rel="stylesheet" href="./highlight.css">{\n  <span class="hljs-attr">&quot;scripts&quot;</span>: {\n    <span class="hljs-attr">&quot;prepare&quot;</span>: <span class="hljs-string">&quot;husky install&quot;</span>,\n    <span class="hljs-attr">&quot;commit&quot;</span>: <span class="hljs-string">&quot;git-cz&quot;</span>\n  },\n  <span class="hljs-attr">&quot;config&quot;</span>: {\n    <span class="hljs-attr">&quot;commitizen&quot;</span>: {\n      <span class="hljs-attr">&quot;path&quot;</span>: <span class="hljs-string">&quot;cz-conventional-changelog&quot;</span>\n    }\n  },\n  <span class="hljs-attr">&quot;lint-staged&quot;</span>: {\n    <span class="hljs-attr">&quot;*.{ts,tsx,js,vue,less}&quot;</span>: <span class="hljs-string">&quot;prettier --write&quot;</span>,\n    <span class="hljs-attr">&quot;*.{ts,tsx,js,vue}&quot;</span>: <span class="hljs-string">&quot;eslint --fix&quot;</span>,\n    <span class="hljs-attr">&quot;*.{vue,css,less}&quot;</span>: <span class="hljs-string">&quot;stylelint --fix&quot;</span>\n  },\n  <span class="hljs-attr">&quot;eslintConfig&quot;</span>: {\n    <span class="hljs-attr">&quot;root&quot;</span>: <span class="hljs-literal">true</span>,\n    <span class="hljs-attr">&quot;ignorePatterns&quot;</span>: [\n      <span class="hljs-string">&quot;es/**&quot;</span>,\n      <span class="hljs-string">&quot;umd/**&quot;</span>,\n      <span class="hljs-string">&quot;site/**&quot;</span>,\n      <span class="hljs-string">&quot;public/**&quot;</span>,\n      <span class="hljs-string">&quot;src/*/__tests__/**&quot;</span>,\n      <span class="hljs-string">&quot;.varlet/**&quot;</span>\n    ],\n    <span class="hljs-attr">&quot;extends&quot;</span>: [\n      <span class="hljs-string">&quot;@varlet&quot;</span>\n    ]\n  },\n  <span class="hljs-attr">&quot;stylelint&quot;</span>: {\n    <span class="hljs-attr">&quot;extends&quot;</span>: [\n      <span class="hljs-string">&quot;@varlet/stylelint-config&quot;</span>\n    ],\n    <span class="hljs-attr">&quot;ignoreFiles&quot;</span>: [\n      <span class="hljs-string">&quot;es/**&quot;</span>,\n      <span class="hljs-string">&quot;umd/**&quot;</span>,\n      <span class="hljs-string">&quot;site/**&quot;</span>,\n      <span class="hljs-string">&quot;coverage/**&quot;</span>,\n      <span class="hljs-string">&quot;public/**&quot;</span>,\n      <span class="hljs-string">&quot;highlight/**&quot;</span>\n    ]\n  }\n}\n</code></pre><p>创建<code>commitlint.config.js</code></p><pre class="hljs"><code><link rel="stylesheet" href="./highlight.css"><span class="hljs-comment">// commitlint.config.js</span>\n<span class="hljs-built_in">module</span>.exports = {\n  <span class="hljs-attr">extends</span>: [<span class="hljs-string">&#39;@commitlint/config-conventional&#39;</span>],\n}\n</code></pre><p>创建<code>.prettierignore</code></p><pre class="hljs"><code><link rel="stylesheet" href="./highlight.css">// .prettierignore\ncoverage/**\nes/**\numd/**\nsite/**\npublic/**\nsrc/*/__tests__/**\n*.md\n</code></pre></div><div class="card"><h3>typescript</h3><p>创建<code>tsconfig.json</code></p><pre class="hljs"><code><link rel="stylesheet" href="./highlight.css">{\n  <span class="hljs-attr">&quot;compilerOptions&quot;</span>: {\n    <span class="hljs-attr">&quot;strict&quot;</span>: <span class="hljs-literal">true</span>,\n    <span class="hljs-attr">&quot;downlevelIteration&quot;</span>: <span class="hljs-literal">true</span>,\n    <span class="hljs-attr">&quot;declaration&quot;</span>: <span class="hljs-literal">true</span>,\n    <span class="hljs-attr">&quot;skipLibCheck&quot;</span>: <span class="hljs-literal">true</span>,\n    <span class="hljs-attr">&quot;esModuleInterop&quot;</span>: <span class="hljs-literal">true</span>,\n    <span class="hljs-attr">&quot;allowJs&quot;</span>: <span class="hljs-literal">true</span>,\n    <span class="hljs-attr">&quot;lib&quot;</span>: [<span class="hljs-string">&quot;esnext&quot;</span>, <span class="hljs-string">&quot;dom&quot;</span>],\n    <span class="hljs-attr">&quot;allowSyntheticDefaultImports&quot;</span>: <span class="hljs-literal">true</span>,\n    <span class="hljs-attr">&quot;jsx&quot;</span>: <span class="hljs-string">&quot;preserve&quot;</span>\n  }\n}\n</code></pre></div><div class="card"><h3>发布代码</h3><p>使用<code>release-it</code>和<code>conventional-changelog</code>进行代码发布和更新日志的生成，<code>package.json</code>配置如下</p><pre class="hljs"><code><link rel="stylesheet" href="./highlight.css">{\n  <span class="hljs-attr">&quot;scripts&quot;</span>: {\n    <span class="hljs-attr">&quot;genlog&quot;</span>: <span class="hljs-string">&quot;conventional-changelog -p angular -i CHANGELOG.md -s&quot;</span>,\n    <span class="hljs-attr">&quot;genAllLog&quot;</span>: <span class="hljs-string">&quot;conventional-changelog -p angular -i CHANGELOG.md -s -r 0&quot;</span>,\n    <span class="hljs-attr">&quot;release&quot;</span>: <span class="hljs-string">&quot;yarn compile &amp;&amp; release-it&quot;</span>\n  },\n  <span class="hljs-attr">&quot;release-it&quot;</span>: {\n    <span class="hljs-attr">&quot;git&quot;</span>: {\n      <span class="hljs-attr">&quot;changelog&quot;</span>: <span class="hljs-string">&quot;git log --pretty=format:\\&quot;* %s (%h)\\&quot; ${from}...${to}&quot;</span>,\n      <span class="hljs-attr">&quot;tagName&quot;</span>: <span class="hljs-string">&quot;v${version}&quot;</span>,\n      <span class="hljs-attr">&quot;commitMessage&quot;</span>: <span class="hljs-string">&quot;chore: release ${version}&quot;</span>,\n      <span class="hljs-attr">&quot;requireCleanWorkingDir&quot;</span>: <span class="hljs-literal">false</span>\n    },\n    <span class="hljs-attr">&quot;plugins&quot;</span>: {\n      <span class="hljs-attr">&quot;@release-it/conventional-changelog&quot;</span>: {\n        <span class="hljs-attr">&quot;preset&quot;</span>: <span class="hljs-string">&quot;angular&quot;</span>,\n        <span class="hljs-attr">&quot;infile&quot;</span>: <span class="hljs-string">&quot;CHANGELOG.md&quot;</span>\n      }\n    }\n  }\n}\n</code></pre><h4>发布前注意</h4><ul><li>1.npm和yarn的仓库源必须指向npm官方镜像</li><li>2.npm和yarn都必须执行login命令进行用户登录</li></ul></div>',11)];var c=s(l,[["render",function(s,n,l,c,p,r){return t(),a("div",e,o)}]]);export{c as default};
